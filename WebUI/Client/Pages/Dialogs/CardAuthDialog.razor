@inject NavigationManager NavManager
@inject ILogger<CardAuthDialog> Logger
@inject ISnackbar Snackbar
@using WebUI.Shared.Dto.Response;

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            @localizer["enteraccesscode"]
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudStack>
            <MudTextField Value="@Data.ChipId" Label="@localizer["cardid"]" Variant="Variant.Outlined" ReadOnly="true" />
            <MudTextField @ref="mudTextField" @bind-Value="AccessCode" Label="@localizer["accesscode"]"
                          Immediate="true"
                          Counter="ACCESS_CODE_MAX_LENGTH"
                          MaxLength="ACCESS_CODE_MAX_LENGTH"
                          Variant="Variant.Outlined"    />   
        </MudStack>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Confirm</MudButton>
    </DialogActions>
</MudDialog>

@code {

    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; } = null!;

    [Parameter]
    public BareboneCardProfile Data { get; set; } = null!;
    
    [Parameter]
    public string Mode { get; set; } = null!;

    private MudTextField<string> mudTextField { get; set; }

    private string AccessCode { get; set; } = string.Empty;

    private const int ACCESS_CODE_MAX_LENGTH = 20;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            mudTextField.HelperText = $"{localizer["fromcardini"]}";
            StateHasChanged();
        }
    }

    public async Task Submit()
    {
        if (AccessCode != Data.AccessCode)
        {
            Snackbar.Add("Invalid access code!", Severity.Error);
        }
        else
        {
            if (Mode == "EditCard")
            {
                NavManager.NavigateTo($"Cards/Customize/{Data.AccessCode}/{Data.ChipId}");   
            }
            else
            {
                NavManager.NavigateTo($"Cards/ViewDetail/{Data.AccessCode}/{Data.ChipId}"); 
            }
        }
    }

    private void Cancel() => MudDialog.Cancel();
}